SELENIUM HYBRID FRAMEWORK

Step 1: Create new project and install required packages
    - Selenium
    - Pytest: Python unittest framework
    - Pytest-html: generate pytest HTML reports
    - Pytest-xdist: run parallel tests
    - Openpyxl: MS Excel support
    - Allure-pytest: generate allure reports

Step 2: Create folder structure
    
    Project
        pageObjects (Package)
        testCases (packages)
        utilities (package)
        testData (folder)
        config (folder)
        logs (folder)
        screenshots (folder)
        reports (folder)
        run.bat

Step 3: Automate Login test case
    3.1: Create LoginPage Object Class under 'pageObjects'
    3.2: Create LoginTest under 'testCases'
    3.3: Create conftest.py under 'testCases'

Step 4: Capture screenshot on failures
    Update LoginTest with screenshot under 'testCases'

Step 5: Read common values from init file
    5.1: Add 'config.ini' file in 'config' folder
    5.2: Create 'readProperties.py' utility file under 'uitilities' package to read common data
    5.3: Replace hard coded values in test cases

Step 6: Adding logs to the test cases
    6.1: Add customLogger.py under 'utilities' package
    6.2: Add los to Login test case

Step 7: Run tests on desired browser and in parallel
    7.1: Update conftest.py with required Fixtures which accept command line arguments
    7.2: Pass browser name as argument in command line

    RUN TEST ON DESIRED BROWSER:
        pytest -s -v <test_path> --browser chrome
        pytest -s -v <test_path> --browser firefox

    RUN TESTS IN PARALLEL
        pytest -s -v n=3 <test_path> --browser chrome
        pytest -s -v n=3 <test_path> --browser firefox

Step 8: 